@use 'theme/palettes';
@use 'theme/colors' with (
    $palette: (
        primary: (
            h: 224,
            s: 47
        ),
        secondary: (
            h: 357,
            s: 90
        ),
        accent: (
            h: 39,
            s: 93
        ),
        neutral: (
            h: 230,
            s: 15
        )
    )
);

@use 'functions' as f;

// THEME
@forward 'theme/colors';
@forward 'theme/fonts';

// GENERATE
@forward 'theme/palettes';

$palettes: ();
$cats: ();

@each $key, $value in colors.$palette{
    $map: ();
    $map: map-merge($map, ($key: f.create_colour_map($value)));
    $palettes: map-merge($palettes, $map);
}

@each $key, $value in colors.$categories{
    $map: ();
    $map: map-merge($map, ($key: f.create_colour_map($value)));
    $cats: map-merge($cats, $map);
}

@function color($color: 'neutral', $tone: '500') {
    @return map-get(map-get($palettes, $color), $tone);
}

@function colorcat($cat: 'neutral', $tone: '500') {
    @return map-get(map-get($cats, $cat), $tone);
}