@use '../functions' as f;
@use 'colors';

$palettes : (
    primary : (
        0 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 0)),
        100 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 100)),
        200 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 200)),
        300 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 300)),
        400 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 400)),
        500 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 500)),
        600 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 600)),
        700 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 700)),
        800 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 800)),
        900 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 900)),
        1000 : hsl(f.list(colors.$palette, primary, h), f.list(colors.$palette, primary, s), map-get(colors.$tones, 1000)),
    ),
    secondary: (
        0 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 0)),
        100 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 100)),
        200 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 200)),
        300 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 300)),
        400 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 400)),
        500 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 500)),
        600 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 600)),
        700 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 700)),
        800 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 800)),
        900 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 900)),
        1000 : hsl(f.list(colors.$palette, secondary, h), f.list(colors.$palette, secondary, s), map-get(colors.$tones, 1000)),
    ),
    accent: (
        0: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 0)),
        100: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 100)),
        200: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 200)),
        300: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 300)),
        400: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 400)),
        500: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 500)),
        600: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 600)),
        700: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 700)),
        800: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 800)),
        900: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 900)),
        1000: hsl(f.list(colors.$palette, accent, h), f.list(colors.$palette, accent, s), map-get(colors.$tones, 1000)),
    ),
    neutral: (
        0: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), 100),
        100: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 100)),
        200: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 200)),
        300: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 300)),
        400: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 400)),
        500: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 500)),
        600: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 600)),
        700: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 700)),
        800: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 800)),
        900: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), map-get(colors.$tones, 900)),
        1000: hsl(f.list(colors.$palette, neutral, h), f.list(colors.$palette, neutral, s), 0),
    )
);